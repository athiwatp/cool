// Web MVC Demo

class MyController extends Controller {
	member view     = new View();
	member database = new Database("mysql://user:password@localhost/db");
	member system   = new System();
	member sessions = [];

	new {
		this.view.header = "header.html";
		this.view.footer = "footer.html";

		this.database.execute("select * from sesions", [], function(records) {
			if (records == null) records = [];
			for (var i = 0; i < records.length; i++) {
			}
		});
	}

	method error(context) {
		var page = this.view.render("error.html", {
			title: "Error " + context.request.url
		});
		context.response.end(page);
	}

	method index(context) {
		var page = this.view.render("index.html", {
			title: "Cool!"
		});
		context.response.end(page);
	}

	method signin(context) {
		if (context.request.method == "POST") {
			var data = "";
			var body = {};
			var controller = this;

			context.request.on("readable", function() {
				var chunk = context.request.read();
				data += chunk.toString();
			});

			context.request.on("end", function() {
				var system = new System();
				data = system.unescape(data);
				var tokens = data.split("&");
				for (var i = 0; i < tokens.length; i++) {
					var fields = tokens[i].split("=");
					body[fields[0]] = fields[1];
				}

				system.write(body);
				if (body.email == "user@email.com" &&
					body.password == "password") {
					var token = "token007007";
					controller.sessions[token] = body.email;
					context.response.setHeader("Set-Cookie",
						"session=" + token + "; HttpOnly");
				}
				context.response.writeHead(302, {Location: "/"});
				context.response.end();
			});

		} else {
			var model = {title: "Sign In"};
			var page  = this.view.render("signin.html", model);
			context.response.end(page);
		}
	}

	method blog(context) {
		var view = this.view;
		var title = context.request.url.split("/")[2] || "";

		this.database.execute("select * from blogs where title=? or id=?",
		[title, title],
		function(records) {
			if (records == null || records.length == 0) {
				var model = {title: "Blog not found"};
				var page  = view.render("error.html", model);
				context.response.end(page);
			} else {
				var model = {title: records[0].title, record: records[0]};
				var page  = view.render("blog.html", model);
				context.response.end(page);
			}
		});
	}

/*
// creating token
var token = "token-ABC0000001";
this.session[token] = { email: "kookiat@kookiat.com" };
context.response.setHeader("Set-Cookie", "session=" + token + "; HttpOnly");
context.response.end("OK");

// verify token
this.system.write(context.request.headers);
var cookies = context.request.headers.cookie.split(";");
for (var i = 0; i < cookies.length; i++) {
	var fields = cookies[i].trim().split("=");
	if (fields[0] == "session") {
		if (this.session[fields[1]]) {
			this.system.write("session is " + this.session[fields[1]]["email"]);
		}
	}
}
*/

	method query(context) {
		var view = this.view;
		this.database.execute("select * from users", function(records) {
			var model = {title: "Query", records: records};
			var page  = "";
			try {
				page = view.render("query.html", model);
			} catch (e) {}
			context.response.end(page);
		});
	}
}

main
class Test {
	new {
		var controller = new MyController();
		var server = new Server(controller);
		// server.middleware.push(new Logger());
		server.middleware.push(new Less());
		server.start();
		var system = new System();
		system.write(server.text());
	}
}












//
