// Standard Library

class Root {
	member class = "Root";
	method text() {
		return this.class;
	}
}

class Exception extends Root {
	member class = "Exception";
}

class System extends Root {
	member class = "System";

	method write(data) {
		console.log(data);
	}
	method execute(name) {
		var child = require("child_process");
		child.exec(name).unref();
	}
	method unescape(data) {
		return unescape(data);
	}
	method escape(data) {
		return escape(data);
	}
}

// JavaScript Engine
class Engine extends Root {
	member class = "Engine";

	method execute(code) {
		return eval(code);
	}
	method parse(data) {
		return JSON.parse(data);
	}
	method text(data) {
		return JSON.stringify(data);
	}
}

class Web extends Root {
	member class = "Web";
	method select(x) {
		return [];
	}
	method list(x) {
		return [];
	}
	method get(url, data, callback) {
		callback();
	}
	method post(url, data, callback) {
		callback();
	}
}

class File(name) extends Root {
	member class = "File";
	member fs = require("fs");
	new {
		this.name = name;
	}
	method read() {
		var result = null;
		try {
			result = this.fs.readFileSync(this.name);
		} catch (e) { /* throw new Exception(); */ }
		return result;
	}
	method write(data) {
		this.fs.writeFileSync(this.name, data);
	}
	member exists() {
		return this.fs.existsSync(this.name);
	}
	member list() {
		return this.fs.readdirSync(this.name);
	}
	member isDirectory() {
		return this.fs.statsSync(this.name).isDirectory();
	}
}

class TextFile(name) extends File(name) {
	member class = "TextFile";

	method read() {
		var result = null;
		try {
			result = this.fs.readFileSync(this.name, {encoding: "utf8"});
		} catch (e) { /* throw new Exception(); */ }
		return result;
	}
	method write(data) {
		this.fs.writeFileSync(this.name, data);
	}
	method append(data) {
		this.fs.appendFileSync(this.name, data);
	}
}

class Integer extends Root {
	member class = "Integer";
	method parse(n) { return parseInt(n); }
}

class Float extends Root {
	member class = "Float";
	method parse(f) { return parseFloat(f); }
}
