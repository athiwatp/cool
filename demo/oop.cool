// Demo of Inheritance and Polymorphism

class A {
	member system = new System();
	method aaa() { this.system.log("A.aaa()"); }
}

class B {
		member system = new System();
		method bbb() { this.system.log("B.bbb()"); }
}

/* first style
// inheritance
class F extends A {
}

// inheritance with parameter and polymorphism
class E(p) extends A {
	member data = p;
	method aaa() { this.system.log("E.aaa() - " + this.data); }
}

// inheritance with parameters
class G (p, q) extends A {
	member p = p;
	member q = q;
	method aaa() {
		this.system.log("G.aaa() - " + p + " - " + q);
	}
}
*/

class H {
	mutate A;
	mutate B;

	method hhh() {
		this.bbb();
	}

}

class I(p) {
	mutate A;
	member p = p;
	method iii() {
		this.system.log(this.p);
	}
}

class J(p) {
	mutate I(p);
	method jjj() {
		this.system.log("J.jjj() - " + this.p);
	}
}

class K(p, q) {
	mutate A;
	member p = p;
	member q = q;
	method kkk() {
		this.system.log("K.kkk() - " + this.q);
	}
}

class L(p, q, r) {
	mutate K(p, q);
	mutate J(r);
	method lll() {
		this.system.log("L.lll() - " + this.p + " - " + this.q);
	}
}

class Main {
	method start() {
		/*
		var f = new F();
		f.aaa();
		var e = new E('hello');
		e.aaa();
		var g = new G('first', 'second');
		g.aaa();
		if (g instanceof G) {
			console.log('true');
		}

		var h = new H();
		h.hhh();
		*/

		var j = new J('ppp');
		j.jjj();
		var k = new K("ppp", "qqq");
		k.kkk();

		var l = new L("ppp", "qqq", "rrr");
		l.lll();
	}
}
